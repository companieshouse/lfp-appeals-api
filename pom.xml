<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>uk.gov.companieshouse</groupId>
        <artifactId>companies-house-parent</artifactId>
        <version>2.1.5</version>
    </parent>

    <artifactId>lfp-appeals-api</artifactId>
    <version>unversioned</version>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven-compiler-plugin.version>3.3.0</maven-compiler-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Versions -->
        <version.spring.boot>3.2.6</version.spring.boot>
        <commons-lang3.version>3.14.0</commons-lang3.version>
        <structured-logging.version>3.0.7</structured-logging.version>
        <kafka-models.version>3.0.7</kafka-models.version>
        <ch-kafka.version>3.0.2</ch-kafka.version>
        <avro.version>1.4.0</avro.version>
        <rest-service-common-library.version>0.0.5</rest-service-common-library.version>
        <api-sdk-java.version>4.3.40</api-sdk-java.version>
        <private-api-sdk-java.version>2.0.411</private-api-sdk-java.version>
        <api-sdk-manager-java-library.version>3.0.5</api-sdk-manager-java-library.version>
        <environment-reader-library.version>3.0.1</environment-reader-library.version>
        <httpclient.version>4.5.14</httpclient.version>
        <spring-kafka-test.version>3.2.0</spring-kafka-test.version>
        <json.version>20240303</json.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <maven-jar-plugin.version>3.4.1</maven-jar-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <java.version>21</java.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <mockito-inline.version>5.2.0</mockito-inline.version>
        <sonar-maven-plugin.version>4.0.0.4121</sonar-maven-plugin.version>
        <!-- Docker property -->
        <jib-maven-plugin.version>3.4.2</jib-maven-plugin.version>
    </properties>

    <repositories>
        <repository>
            <id>Companies House</id>
            <url>http://repository.aws.chdev.org:8081/artifactory/virtual-release</url>
        </repository>
    </repositories>

	<dependencies>
        <!-- Spring/SpringBoot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>
        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>structured-logging</artifactId>
            <version>${structured-logging.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>kafka-models</artifactId>
            <version>${kafka-models.version}</version>
        </dependency>

        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>ch-kafka</artifactId>
            <version>${ch-kafka.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        
        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>environment-reader-library</artifactId>
            <version>${environment-reader-library.version}</version>
        </dependency>
        
        <dependency>
            <groupId>uk.gov.companieshouse</groupId>
            <artifactId>api-sdk-manager-java-library</artifactId>
            <version>${api-sdk-manager-java-library.version}</version>
        </dependency>

	    <dependency>
	        <groupId>uk.gov.companieshouse</groupId>
	        <artifactId>private-api-sdk-java</artifactId>
	        <version>${private-api-sdk-java.version}</version>
	    </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${version.spring.boot}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-inline</artifactId>
		    <version>${mockito-inline.version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
       	</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${version.spring.boot}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <fork>true</fork>
                    <meminitial>128m</meminitial>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <maxmem>512m</maxmem>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>target/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>target/jacoco-it.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <!--suppress UnresolvedMavenProperty -->
                            <outputDirectory>${sonar.jacoco.reports}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
                <configuration>
                    <extraDirectories>
                        <paths>
                            <path>
                                <from>${project.basedir}/api-enumerations</from>
                                <into>/api-enumerations</into>
                            </path>
                        </paths>
                    </extraDirectories>
                    <from>
                        <image>416670754337.dkr.ecr.eu-west-2.amazonaws.com/ci-corretto-build-21:latest</image>
                    </from>
                    <to>
                        //Once the pipeline is moved to shared services need to update this to image reference from shared services
                        <image>169942020521.dkr.ecr.eu-west-1.amazonaws.com/local/lfp-appeals-api:latest</image>
                    </to>
                    <container>
                        <expandClasspathDependencies>true</expandClasspathDependencies>
                        <jvmFlags>
                            <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
